name: Run Integration Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      NODE_ENV: test
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: test_user
      DB_PASSWORD: test_pass
      DB_NAME: test_db
      TEST_DB_URL: mysql://test_user:test_pass@mysql:3306/test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      # Optional: copy .env.test to .env if you use dotenv
      - name: Copy .env.test
        run: cp .env.test .env

      # ✅ Wait until MySQL is ready before running migrations
      - name: Wait for MySQL to be ready
        run: |
          echo "⏳ Waiting for MySQL to be ready..."
          for i in {1..20}; do
            if mysqladmin ping -h"$DB_HOST" -u"$DB_USER" -p"$DB_PASSWORD" --silent; then
              echo "✅ MySQL is ready!"
              break
            fi
            echo "MySQL not ready yet... retrying ($i/20)"
            sleep 3
          done

      # Run your database migrations
      - name: Run migrations
        run: npx knex migrate:latest --env test

      - name: Run seeds
        run: npx knex seed:run --env test

      # Run your integration tests
      - name: Run tests
        run: npm test -- --runInBand

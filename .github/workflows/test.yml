name: Run Integration Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.11
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_pass
          MARIADB_ROOT_PASSWORD: root
          MARIADB_DATABASE: test_db
          MARIADB_USER: test_user
          MARIADB_PASSWORD: test_pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=12

    env:
      NODE_ENV: test
      DB_HOST: mariadb          # üëà match the service key name
      DB_PORT: 3306
      DB_USER: test_user
      DB_PASSWORD: test_pass
      DB_NAME: test_db
      TEST_DB_URL: mysql://test_user:test_pass@mariadb:3306/test_db

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Copy .env.test
        run: cp .env.test .env

      - name: Install MySQL client
        run: sudo apt-get update && sudo apt-get install -y mysql-client

      - name: Wait for MariaDB to be ready
        run: |
          echo "‚è≥ Waiting for MariaDB (host: $DB_HOST)..."
          for i in {1..20}; do
            if mysql -h"$DB_HOST" -uroot -proot -e "SELECT 1" > /dev/null 2>&1; then
              echo "‚úÖ MariaDB is ready!"
              sleep 5
              break
            fi
            echo "MariaDB not ready yet... retrying ($i/20)"
            sleep 3
            if [ $i -eq 20 ]; then
              echo "‚ùå MariaDB did not become ready in time."
              echo "üîç Dumping container logs for debugging..."
              docker ps -a
              docker logs $(docker ps -qf "ancestor=mariadb:10.11") || true
              exit 1
            fi
          done

      - name: Debug DB users
        run: |
          echo "üßæ Checking existing users in MariaDB..."
          mysql -h"$DB_HOST" -uroot -proot -e "SELECT User, Host FROM mysql.user;"

      - name: Run migrations (with retries)
        run: |
          for i in {1..5}; do
            echo "Running migrations (attempt $i)..."
            if npx knex migrate:latest --env test; then
              echo "‚úÖ Migrations succeeded!"
              break
            else
              echo "‚ö†Ô∏è Migrations failed. Retrying in 5s..."
              sleep 5
            fi
            if [ $i -eq 5 ]; then
              echo "‚ùå Migrations failed after 5 attempts."
              exit 1
            fi
          done

      - name: Run seeds
        run: npx knex seed:run --env test

      - name: Run tests
        run: npm test -- --runInBand
